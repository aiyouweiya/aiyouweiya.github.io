<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>aiyouweiya&#39;s blog</title>
  <subtitle>A Man Walking On The Cable</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://aiyouweiya.github.io/"/>
  <updated>2017-02-17T12:25:30.232Z</updated>
  <id>https://aiyouweiya.github.io/</id>
  
  <author>
    <name>aiyouweiya</name>
    <email>aiyouweiya1996@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo博客配置篇（二）</title>
    <link href="https://aiyouweiya.github.io/posts/54527/"/>
    <id>https://aiyouweiya.github.io/posts/54527/</id>
    <published>2017-02-15T16:00:00.000Z</published>
    <updated>2017-02-17T12:25:30.232Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Next主题安装"><a href="#Next主题安装" class="headerlink" title="Next主题安装"></a>Next主题安装</h2><p><code>Next</code>是我用的第一款主题，精于心简于形的灵感，响应式的设计，还可以高度自由定制，体验起来真的是超级无敌爽！！关于<code>Next</code>的介绍大家可以参考官网 <a href="http://theme-next.iissnan.com/" target="_blank" rel="external">http://theme-next.iissnan.com/</a> 。</p>
<p>在 <code>Hexo</code>中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，称为 <code>站点配置文件</code>，主要包含 <code>Hexo</code>本身的配置；另一份位于主题目录下，称为 <code>主题配置文件</code>，这份配置由主题作者提供，主要用于配置主题相关的选项。</p>
<a id="more"></a>
<h3 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h3><p>在终端下使用以下命令进行安装。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
<p>将主题文件拷贝至<code>站点目录</code>的 <code>themes</code> 目录下。</p>
<h3 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h3><p>打开<code>站点配置</code>文件， 找到 <code>theme</code> 字段，并将其值更改为 <code>next</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: next</div></pre></td></tr></table></figure>
<p>到此，<code>NexT</code>主题安装完成。下一步我们将验证主题是否正确启用。</p>
<h3 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a>验证主题</h3><p>在站点根目录下，打开终端工具，使用以下命令进行验证。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo server</div><div class="line">INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
<p>此时即可使用浏览器访问 <code>http://localhost:4000</code>，检查站点是否正确运行。</p>
<h2 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h2><h3 id="Scheme"><a href="#Scheme" class="headerlink" title="Scheme"></a>Scheme</h3><p><code>Scheme</code>的切换通过更改 <code>主题配置</code>文件，搜索 <code>scheme</code> 关键字。 你会看到有三行<code>scheme</code>的配置，将你需用启用的 <code>scheme</code>前面注释 <code>#</code>即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#scheme: Muse</div><div class="line">#scheme: Mist</div><div class="line">scheme: Pisces</div></pre></td></tr></table></figure>
<h3 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h3><p>编辑<code>站点配置</code>文件， 将 <code>language</code> 设置成你所需要的语言。例如选用简体中文，配置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">language: zh-Hans</div></pre></td></tr></table></figure>
<p><code>Next</code>支持的语言如下表格所示</p>
<table>
<thead>
<tr>
<th>语言</th>
<th>代码</th>
<th>设定示例</th>
</tr>
</thead>
<tbody>
<tr>
<td>English</td>
<td><code>en</code></td>
<td><code>language: en</code></td>
</tr>
<tr>
<td>简体中文</td>
<td><code>zh-Hans</code></td>
<td><code>language: zh-Hans</code></td>
</tr>
<tr>
<td>Français</td>
<td><code>fr-FR</code></td>
<td><code>language: fr-FR</code></td>
</tr>
<tr>
<td>Português</td>
<td><code>pt</code></td>
<td><code>language: pt</code></td>
</tr>
<tr>
<td>繁體中文</td>
<td><code>zh-hk</code> 或者 <code>zh-tw</code></td>
<td><code>language: zh-hk</code></td>
</tr>
<tr>
<td>Русский язык</td>
<td><code>ru</code></td>
<td><code>language: ru</code></td>
</tr>
<tr>
<td>Deutsch</td>
<td><code>de</code></td>
<td><code>language: de</code></td>
</tr>
<tr>
<td>日本語</td>
<td><code>ja</code></td>
<td><code>language: ja</code></td>
</tr>
<tr>
<td>Indonesian</td>
<td><code>id</code></td>
<td><code>language: id</code></td>
</tr>
</tbody>
</table>
<h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 <code>NexT</code>使用的是 <a href="http://fontawesome.io/" target="_blank" rel="external">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 <code>Retina</code>屏幕下 图标模糊的问题。</p>
<p>编辑<code>主题配置</code>文件，修改以下内容:</p>
<ol>
<li><p>设定菜单内容，对应的字段是 <code>menu</code>。 菜单内容的设置格式是：<code>item name: link</code>。其中 <code>item name</code>是一个名称，这个名称并不直接显示在页面上，她将用于匹配图标以及翻译。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  #about: /about</div><div class="line">  #categories: /categories</div><div class="line">  tags: /tags</div><div class="line">  #commonweal: /404.html</div></pre></td></tr></table></figure>
</li>
<li><p>设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。<code>Hexo</code>在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在<code>NexT</code>主题目录下的 <code>languages/{language}.yml</code> （<code>{language}</code> 为你所使用的语言）。</p>
<p>以简体中文为例，若你需要添加一个菜单项，比如 <code>something</code>。那么就需要修改简体中文对应的翻译文件 <code>languages/zh-Hans.yml</code>，在 <code>menu</code> 字段下添加一项：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: 首页</div><div class="line">  archives: 归档</div><div class="line">  categories: 分类</div><div class="line">  tags: 标签</div><div class="line">  about: 关于</div><div class="line">  search: 搜索</div><div class="line">  commonweal: 公益404</div><div class="line">  something: 有料</div></pre></td></tr></table></figure>
</li>
<li><p>设定菜单项的图标，对应的字段是 <code>menu_icons</code>。 此设定格式是 <code>item name: icon name</code>，其中 <code>item name</code> 与上一步所配置的菜单名字对应，<code>icon name</code> 是 <code>Font Awesome</code> 图标的 名字。而 <code>enable</code> 可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">menu_icons:</div><div class="line">  enable: true</div><div class="line">  # Icon Mapping.</div><div class="line">  home: home</div><div class="line">  about: user</div><div class="line">  categories: th</div><div class="line">  tags: tags</div><div class="line">  archives: archive</div><div class="line">  commonweal: heartbeat</div></pre></td></tr></table></figure>
<p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的<code>Font Awesome</code>图标名字） 的情况下，<code>NexT</code>将会使用 <i class="fa fa-question-circle"></i>作为图标。</p>
</li>
</ol>
<h3 id="侧栏"><a href="#侧栏" class="headerlink" title="侧栏"></a>侧栏</h3><p>默认情况下，侧栏仅在文章页面（拥有目录列表）时才显示，并放置于右侧位置。 可以通过修改<code>主题配置文件</code> 中的 <code>sidebar</code> 字段来控制侧栏的行为。侧栏的设置包括两个部分，其一是侧栏的位置， 其二是侧栏显示的时机。</p>
<ol>
<li><p>设置侧栏的位置，修改 <code>sidebar.position</code> 的值，支持的选项有：</p>
<ul>
<li><p>left - 靠左放置</p>
</li>
<li><p>right - 靠右放置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sidebar:</div><div class="line">  position: left</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>设置侧栏显示的时机，修改 <code>sidebar.display</code> 的值，支持的选项有：</p>
<ul>
<li><p><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</p>
</li>
<li><p><code>always</code> - 在所有页面中都显示</p>
</li>
<li><p><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</p>
</li>
<li><p><code>remove</code> - 完全移除</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sidebar:</div><div class="line">  display: post</div></pre></td></tr></table></figure>
</li>
</ul>
<p>​</p>
</li>
</ol>
<h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><p>编辑 <code>站点配置</code>文件， 新增字段 <code>avatar</code>， 值设置成头像的链接地址。其中，头像的链接地址可以是：</p>
<table>
<thead>
<tr>
<th>值</th>
<th>地址</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>http://example.com/avatar.png</code></td>
<td>完整的互联网 URI</td>
</tr>
<tr>
<td>将头像放置主题目录下的 <code>source/uploads/</code> （新建uploads目录若不存在） 配置为：<code>avatar: /uploads/avatar.png</code>或者 放置在 <code>source/images/</code> 目录下 配置为：<code>avatar: /images/avatar.png</code></td>
<td>站点内的地址</td>
</tr>
</tbody>
</table>
<p>头像设置示例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">avatar: http://example.com/avatar.png</div></pre></td></tr></table></figure>
<h3 id="作者昵称"><a href="#作者昵称" class="headerlink" title="作者昵称"></a>作者昵称</h3><p>编辑<code>站点配置</code>文件， 设置 <code>author</code> 为你的昵称。</p>
<h3 id="站点描述"><a href="#站点描述" class="headerlink" title="站点描述"></a>站点描述</h3><p>编辑 <code>站点配置</code>文件， 设置 <code>description</code> 字段为你的站点描述。站点描述可以是你喜欢的一句签名:)</p>
<h3 id="站点建立时间"><a href="#站点建立时间" class="headerlink" title="站点建立时间"></a>站点建立时间</h3><p>这个时间将在站点的底部显示，例如 <code>© 2013 - 2015</code>。 编辑 主题配置文件，新增字段 <code>since</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">since: 2017</div></pre></td></tr></table></figure>
<h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>以上是文章摘要 <code>&lt;!--more--&gt;</code>以下是余下全文。</p>
<h3 id="「标签」「分类」页面"><a href="#「标签」「分类」页面" class="headerlink" title="「标签」「分类」页面"></a>「标签」「分类」页面</h3><p>以标签为例，在<code>source\</code>下新建<code>tags</code>文件夹，新建<code>index.md</code>文件，添加以下内容，分类是<code>categories</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">layout: &quot;tags&quot;</div><div class="line">title: &quot;标签&quot;</div><div class="line">type: &quot;tags&quot;</div><div class="line">description: &quot;Hey, this is tags page&quot;</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure>
<p>编辑 <code>主题配置文件</code> ， 添加 <code>tags</code> 到 <code>menu</code> 中，如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: /</div><div class="line">  archives: /archives</div><div class="line">  tags: /tags</div></pre></td></tr></table></figure>
<h3 id="侧边栏社交链接"><a href="#侧边栏社交链接" class="headerlink" title="侧边栏社交链接"></a>侧边栏社交链接</h3><p>侧栏社交链接的修改包含两个部分，第一是链接，第二是链接图标。 两者配置均在 <code>主题配置</code>文件 中。</p>
<ol>
<li><p>链接放置在 <code>social</code> 字段下，一行一个链接。其键值格式是 <code>显示文本: 链接地址</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Social links</div><div class="line">social:</div><div class="line">  GitHub: https://github.com/your-user-name</div><div class="line">  Twitter: https://twitter.com/your-user-name</div><div class="line">  微博: http://weibo.com/your-user-name</div><div class="line">  豆瓣: http://douban.com/people/your-user-name</div><div class="line">  知乎: http://www.zhihu.com/people/your-user-name</div><div class="line">  # 等等</div></pre></td></tr></table></figure>
</li>
<li><p>设定链接的图标，对应的字段是 <code>social_icons</code>。其键值格式是 <code>匹配键: Font Awesome 图标名称</code>， <code>匹配键</code> 与上一步所配置的链接的 <code>显示文本</code> 相同（大小写严格匹配），<code>图标名称</code> 是 Font Awesome 图标的名字（不必带 <code>fa-</code> 前缀）。 <code>enable</code> 选项用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># Social Icons</div><div class="line">social_icons:</div><div class="line">  enable: true</div><div class="line">  # Icon Mappings</div><div class="line">  GitHub: github</div><div class="line">  Twitter: twitter</div><div class="line">  微博: weibo</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h3><p>编辑 <code>主题配置</code>文件 添加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># title</div><div class="line">links_title: Links</div><div class="line">links:</div><div class="line">  aiyouweiya: https://aiyouweiya.github.io</div><div class="line">  Title: http://example.com/</div></pre></td></tr></table></figure>
<h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><p><code>NexT</code> 中 <code>RSS</code>有三个设置选项，满足特定的使用场景。 更改 <code>主题配置</code>文件，设定 <code>rss</code> 字段的值：</p>
<ul>
<li><p><code>false</code>：禁用 <code>RSS</code>，不在页面上显示 <code>RSS</code> 连接。</p>
</li>
<li><p>留空：使用 <code>Hexo</code> 生成的<code>Feed</code> 链接。 你可以需要先安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a> 插件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-feed --save</div></pre></td></tr></table></figure>
</li>
<li><p>具体的链接地址：适用于已经烧制过 Feed 的情形。</p>
</li>
</ul>
<h2 id="个性化定制"><a href="#个性化定制" class="headerlink" title="个性化定制"></a>个性化定制</h2><h3 id="无序列表样式"><a href="#无序列表样式" class="headerlink" title="无序列表样式"></a>无序列表样式</h3><p>在样式文件的<code>blog\themes\next\source\css_custom</code>文件夹下找到<code>custom.styl</code>文件</p>
<p>加入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ul &#123;</div><div class="line">list-style-type: disc;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>以上为实心圆，如需要调整到和文章页面相同的空心圆，修改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ul &#123;</div><div class="line">list-style-type: circle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="头像旋转"><a href="#头像旋转" class="headerlink" title="头像旋转"></a>头像旋转</h3><p>替换<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code> 文件为下面的文件</p>
<p><code>sidebar-author.styl</code>  <a href="https://github.com/ehlxr/useful-code/blob/master/resources/sidebar-author.styl" target="_blank" rel="external">https://github.com/ehlxr/useful-code/blob/master/resources/sidebar-author.styl</a></p>
<h3 id="文章底部的那个带-号的标签"><a href="#文章底部的那个带-号的标签" class="headerlink" title="文章底部的那个带#号的标签"></a>文章底部的那个带#号的标签</h3><p>文章底部的那个带<code>#</code>号的标签，比如<code>#NexT</code>，可以把<code>#</code>换成图标。<br>修改模板 <code>layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将 # 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></p>
<h3 id="网站标题优化"><a href="#网站标题优化" class="headerlink" title="网站标题优化"></a>网站标题优化</h3><p>更改 <code>index.swig</code> 文件，文件路径是 <code>your-hexo-site\themes\next\layout</code> ，将下面代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>
<p>改成</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>
<p>这时候你的首页标题会更符合网站名称 - 网站描述这习惯。<br>进阶，做了 <code>seo</code> 优化，把关键词也显示在 <code>Title</code> 标题里，可改成</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% block title %&#125; &#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>
<p><strong>注意：</strong>别堆砌关键字，整个标题一般不超过 <code>80</code> 个字符，可以通过chinaz的seo综合查询检查。</p>
<h3 id="本文结束标记"><a href="#本文结束标记" class="headerlink" title="本文结束标记"></a>本文结束标记</h3><p><code>\themes\next\layout\_macro</code> 中添加 <code>passage-end-tag.swig</code> 文件，其内容为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;</div><div class="line">    &#123;% if not is_index %&#125;</div><div class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢阅读------&lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>在 <code>\themes\next\layout\_macro\post.swig</code> 中， <code>post-body</code> 之后， <code>post-footer</code> 之前添加如下代码（<code>post-footer</code>之前两个<code>DIV</code>）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;</div><div class="line">  &#123;% if not is_index %&#125;</div><div class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</div><div class="line">  &#123;% endif %&#125;</div><div class="line">&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>在<strong>主题配置文件</strong> <code>_config.yml</code> 中添加以下字段开启此功能：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># 文章末尾添加“本文结束”标记</div><div class="line">passage_end_tag:</div><div class="line">  enabled: true</div></pre></td></tr></table></figure>
<p>完成以上设置之后，在每篇文章之后都会添加“本文结束”标记。</p>
<h3 id="听音乐"><a href="#听音乐" class="headerlink" title="听音乐"></a>听音乐</h3><p>在 <code>themes\next\layout\_macro</code> 目录下增加 <code>high.swig</code> 文件，添加以下内容。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 参考Never_yu的High一下功能 </div><div class="line">     网站位置：https://neveryu.github.io/2016/09/30/hexo-next-two,</div><div class="line">               https://neveryu.github.io/2016/11/11/hexo-next-three/--&gt;</div><div class="line">    &lt;a href=&apos;javascript:(</div><div class="line">    function go() &#123;</div><div class="line">      var songs = [</div><div class="line">          &quot;http://olb41wiaa.bkt.clouddn.com/%E5%91%A8%E6%9D%B0%E4%BC%A6,%E6%9D%A8%E7%91%9E%E4%BB%A3%20-%20%E6%B5%81%E6%B5%AA%E8%AF%97%E4%BA%BA.mp3&quot;,</div><div class="line">      ];</div><div class="line"> </div><div class="line">      function S() &#123;</div><div class="line">          var e = document.getElementById(&quot;audio_element_id&quot;);</div><div class="line">          if(e != null)&#123;</div><div class="line">              var index = parseInt(e.getAttribute(&quot;curSongIndex&quot;));</div><div class="line">              if(index &gt; songs.length - 2) &#123;</div><div class="line">                  index = 0;</div><div class="line">              &#125; else &#123;</div><div class="line">                  index++;</div><div class="line">              &#125;</div><div class="line">              e.setAttribute(&quot;curSongIndex&quot;, index);</div><div class="line">          &#125;</div><div class="line">          e.src = i;</div><div class="line">          e.play()</div><div class="line">      &#125;</div><div class="line">      function initAudioEle() &#123;</div><div class="line">          var e = document.getElementById(&quot;audio_element_id&quot;);</div><div class="line">          if(e === null)&#123;</div><div class="line">            e = document.createElement(&quot;audio&quot;);</div><div class="line">            e.setAttribute(&quot;curSongIndex&quot;, 0);</div><div class="line">            e.id = &quot;audio_element_id&quot;;</div><div class="line">            e.loop = false;</div><div class="line">            e.bgcolor = 0;</div><div class="line">            e.innerHTML = &quot; &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;&quot;;</div><div class="line">            document.body.appendChild(e);</div><div class="line">            e.addEventListener(&quot;ended&quot;, function() &#123;</div><div class="line">              go();</div><div class="line">            &#125;, true);</div><div class="line">          &#125;        </div><div class="line">      &#125;</div><div class="line">    </div><div class="line">      initAudioEle();</div><div class="line">      var curSongIndex = parseInt(document.getElementById(&quot;audio_element_id&quot;).getAttribute(&quot;curSongIndex&quot;));</div><div class="line">      var i = songs[curSongIndex];</div><div class="line">      S();</div><div class="line">    &#125;)()&apos;&gt;</div><div class="line">    &lt;i class=&quot;menu-item-icon fa fa-music fa-fw&quot;&gt;&lt;/i&gt;Music&lt;/a&gt; </div><div class="line">&lt;!-- end High一下 --&gt;</div></pre></td></tr></table></figure>
<p><code>\themes\next\layout_macro\sidebar.swig</code>文件，在</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;&#123;&#123; url_for(theme.rss) &#125;&#125;&quot; target=&quot;_blank&quot; rel=&quot;alternate&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;</div><div class="line">    RSS</div><div class="line">&lt;/a&gt;</div></pre></td></tr></table></figure>
<p>后边加入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.highqilai.enabled %&#125;</div><div class="line">&#123;% include &apos;high.swig&apos; %&#125;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>接着在主题配置文件 <code>_config.yml</code> ，加入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">highqilai: </div><div class="line">  enabled: true</div></pre></td></tr></table></figure>
<p>然后打开自定义<code>CSS</code>： <code>\themes\next\source\css\_custom\custom.styl</code> 加入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">.feed-link a&#123;display: inline-block;&#125;</div></pre></td></tr></table></figure>
<h3 id="崩溃欺骗"><a href="#崩溃欺骗" class="headerlink" title="崩溃欺骗"></a>崩溃欺骗</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;!--崩溃欺骗--&gt;</div><div class="line">var OriginTitile = document.title;</div><div class="line"> var titleTime;</div><div class="line"> document.addEventListener(&apos;visibilitychange&apos;, function () &#123;</div><div class="line">     if (document.hidden) &#123;</div><div class="line">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/img/TEP.ico&quot;);</div><div class="line">         document.title = &apos;╭(°A°`)╮ 页面崩溃啦 ~ | 量子广告！&apos;;</div><div class="line">         clearTimeout(titleTime);</div><div class="line">     &#125;</div><div class="line">     else &#123;</div><div class="line">         $(&apos;[rel=&quot;icon&quot;]&apos;).attr(&apos;href&apos;, &quot;/favicon.ico&quot;);</div><div class="line">         document.title = &apos;(ฅ&gt;ω&lt;*ฅ) 噫又好了~&apos; + OriginTitile;</div><div class="line">         titleTime = setTimeout(function () &#123;</div><div class="line">             document.title = OriginTitile;</div><div class="line">         &#125;, 2000);</div><div class="line">     &#125;</div><div class="line"> &#125;);</div></pre></td></tr></table></figure>
<p>做为<code>JS</code>引用时，可以直接将上面代码保存为<code>cheat.js</code>，然后引用。在 <code>\themes\next\layout\_layout.swig</code> 最下边引用加入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!--崩溃欺骗--&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/cheat.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="多说评论不稳定，加载速度慢"><a href="#多说评论不稳定，加载速度慢" class="headerlink" title="多说评论不稳定，加载速度慢"></a>多说评论不稳定，加载速度慢</h3><p>修改的文件<code>\themes\next\layout\_scripts\third-party\comments\duoshuo.swig</code>，将</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(document.getElementsByTagName(&apos;head&apos;)[0]</div></pre></td></tr></table></figure>
<p>修改成下面的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(document.getElementById(&apos;footer&apos;)</div></pre></td></tr></table></figure>
<h3 id="给-Github-添加-README"><a href="#给-Github-添加-README" class="headerlink" title="给 Github 添加 README"></a>给 Github 添加 README</h3><p>默认情况下， <code>Github</code> 中每一个项目，我们希望有一份 <code>README.md</code> 的文件来作为项目的说明，但是我们在项目根目录下的 <code>blog\source</code> 目录下创建一份 <code>README.md</code> 文件，写好说明介绍，部署的时候，这个 <code>README.md</code> 会被 <code>hexo</code> 解析掉，而不会被解析到 <code>Github</code> 中去的。<br>正确的解决方法其实很简单：<br>把 <code>README.md</code> 文件的后缀名改成 <code>MDOWN</code> 然后扔到 <code>blog/source</code> 文件夹下即可，这样 <code>hexo</code> 不会解析， <code>Github</code> 也会将其作为MD文件解析。</p>
<h3 id="自定义-的样式"><a href="#自定义-的样式" class="headerlink" title="自定义``的样式"></a>自定义``的样式</h3><p><code>\themes\next\source\css\_custom\custom.styl</code> 加入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">// 代码块自定义样式``内的</div><div class="line">code &#123;</div><div class="line">    color: #fc6423;</div><div class="line">    background: #fbf7f8;</div><div class="line">    margin: 2px;</div><div class="line">&#125;</div><div class="line">// 大代码块的自定义样式</div><div class="line">.highlight, pre &#123;</div><div class="line">    margin: 5px 0;</div><div class="line">    padding: 5px;</div><div class="line">    border-radius: 3px;</div><div class="line">&#125;</div><div class="line">.highlight, code, pre &#123;</div><div class="line">    border: 1px solid #d6d6d6;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="博客部署的message"><a href="#博客部署的message" class="headerlink" title="博客部署的message"></a>博客部署的message</h3><p><code>\node_modules\hexo-deployer-git\lib\deployer.js</code> 文件末尾找到这一句：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Site updated: &#123;&#123; now(&apos;YYYY-MM-DD HH:mm:ss&apos;) &#125;&#125;.</div></pre></td></tr></table></figure>
<p>改得个性化一点：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这个勤奋的家伙又更新了: &#123;&#123; now(\&apos;YYYY-MM-DD HH:mm:ss\&apos;) &#125;&#125;.</div></pre></td></tr></table></figure>
<h3 id="背景效果"><a href="#背景效果" class="headerlink" title="背景效果"></a>背景效果</h3><p>背景动态效果图和点击小红心效果的相关设置。</p>
<p>在<code>\themes\next\source\js\src</code>文件目录下新建<code>love.js</code>和<code>particle.js</code>。</p>
<p><code>love.js</code> <a href="https://github.com/aiyouweiya/aiyouweiya.github.io/blob/master/js/src/love.js" target="_blank" rel="external">https://github.com/aiyouweiya/aiyouweiya.github.io/blob/master/js/src/love.js</a></p>
<p><code>particle.js</code> <a href="https://github.com/aiyouweiya/aiyouweiya.github.io/blob/master/js/src/particle.js" target="_blank" rel="external">https://github.com/aiyouweiya/aiyouweiya.github.io/blob/master/js/src/particle.js</a></p>
<p>找到<code>\themes\next\layout\_layout.swig</code>文件，在<code>末尾</code>添加以下 js 引入代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 背景动画 --&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/particle.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;!-- 页面点击小红心 --&gt;</div><div class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/love.js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<h3 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h3><p>只需要 <code>主题配置</code>文件 中填入 <code>微信</code>和 <code>支付宝</code> 收款二维码图片地址 即可开启该功能。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！</div><div class="line">wechatpay: /path/to/wechat-reward-image</div><div class="line">alipay: /path/to/alipay-reward-image</div></pre></td></tr></table></figure>
<h3 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h3><p>替换文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 为：<a href="https://github.com/ehlxr/useful-code/blob/master/resources/generator.js" target="_blank" rel="external">generator.js</a></p>
<p>在文章 <code>Front-matter</code> 中添加 <code>top</code> 值，数值越大文章越靠前，如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">top: 10</div><div class="line">---</div></pre></td></tr></table></figure>
<h3 id="图片模式"><a href="#图片模式" class="headerlink" title="图片模式"></a>图片模式</h3><p>1.新建博文，设置<code>type: &quot;picture&quot;</code>，使用<code>{\% gp x-x \%} ... {\% endgp \%}</code>标签引用要展示的图片地址，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: Pictures</div><div class="line">categories: [图片]</div><div class="line">tags: [picture,naruto]</div><div class="line">date: 2017-02-17 15:17</div><div class="line">keywords: picture,naruto</div><div class="line">type: &quot;picture&quot;</div><div class="line">top: 999</div><div class="line">---</div><div class="line">&#123;% gp 5-3 %&#125;</div><div class="line">![](http://olb41wiaa.bkt.clouddn.com/naruto1.jpg)</div><div class="line">![](http://olb41wiaa.bkt.clouddn.com/naruto5.jpg)</div><div class="line">![](http://olb41wiaa.bkt.clouddn.com/naruto3.jpg)</div><div class="line">![](http://olb41wiaa.bkt.clouddn.com/naruto4.jpg)</div><div class="line">![](http://olb41wiaa.bkt.clouddn.com/naruto2.jpg)</div><div class="line">&#123;% endgp %&#125;</div></pre></td></tr></table></figure>
<p>2.<code>{\% gp 5-3 \%}</code>：设置图片展示效果，参考 <code>theme/next/scripts/tags/group-pictures.js</code> 注释示意图。</p>
<p>3.修改一下文件 <code>themes\next\source\css\_common\components\tags\group-pictures.styl</code> 中的以下样式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">.page-post-detail .post-body .group-picture-column &#123;</div><div class="line">  // float: none;</div><div class="line">  margin-top: 10px;</div><div class="line">  // width: auto !important;</div><div class="line">  img &#123; margin: 0 auto; &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="添加字数和阅读时长"><a href="#添加字数和阅读时长" class="headerlink" title="添加字数和阅读时长"></a>添加字数和阅读时长</h3><p>安装<code>wordcount</code>插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-wordcount --save</div></pre></td></tr></table></figure>
<p>修改<code>\themes\next\layout\_macro\post.swig</code>，再合适的位置添加如下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&#123;% if theme.WordCount %&#125;</div><div class="line">&#123;# 字数统计 WordCount #&#125;</div><div class="line">&lt;span class=&quot;post-count&quot;&gt;</div><div class="line">  &amp;nbsp; | &amp;nbsp;</div><div class="line">  &lt;span class=&quot;post-meta-item-icon&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-calendar-o&quot;&gt;&lt;/i&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __(&apos;post.WordCount&apos;) &#125;&#125;&lt;/span&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; wordcount(post.content) &#125;&#125;&lt;/span&gt;</div><div class="line">&lt;/span&gt;</div><div class="line">&#123;# 阅读时长预计 Min2Read #&#125;</div><div class="line">&lt;span class=&quot;post-count&quot;&gt;</div><div class="line">  &amp;nbsp; | &amp;nbsp;</div><div class="line">  &lt;span class=&quot;post-meta-item-icon&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-calendar-o&quot;&gt;&lt;/i&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __(&apos;post.Min2Read&apos;) &#125;&#125;&lt;/span&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; min2read(post.content) &#125;&#125;&amp;nbsp;m&lt;/span&gt;</div><div class="line">&lt;/span&gt;</div><div class="line">&#123;# 总字数统计 TotalCount</div><div class="line">&lt;span class=&quot;post-count&quot;&gt;</div><div class="line">  &amp;nbsp; | &amp;nbsp;</div><div class="line">  &lt;span class=&quot;post-meta-item-icon&quot;&gt;</div><div class="line">    &lt;i class=&quot;fa fa-calendar-o&quot;&gt;&lt;/i&gt;</div><div class="line">  &lt;/span&gt;</div><div class="line">  &lt;span class=&quot;post-meta-item-text&quot;&gt;&#123;&#123; __(&apos;post.TotalCount&apos;) &#125;&#125;&lt;/span&gt;</div><div class="line">  &lt;span class=&quot;&quot;&gt;&#123;&#123; totalcount(site, &apos;0,0.0a&apos;) &#125;&#125;&lt;/span&gt;</div><div class="line">&lt;/span&gt;</div><div class="line">#&#125;</div><div class="line">&#123;% endif %&#125;</div></pre></td></tr></table></figure>
<p>在主题配置文件中 <strong>_config.yml </strong>,添加<strong> WordCount </strong>属性</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 是否开启字数统计</div><div class="line">WordCount: true</div></pre></td></tr></table></figure>
<h3 id="Fork-me-on-GitHub"><a href="#Fork-me-on-GitHub" class="headerlink" title="Fork me on GitHub"></a>Fork me on GitHub</h3><p>在 <a href="https://github.com/blog/273-github-ribbons" target="_blank" rel="external">https://github.com/blog/273-github-ribbons</a> 挑选你中意的样式，复制代码到剪切板。</p>
<p>打开<code>\themes\next\layout\_layout.swig</code>，找到如下代码块，插入剪切板代码。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;&#123;&#123; container_class &#125;&#125; &#123;% block page_class %&#125;&#123;% endblock %&#125; &quot;&gt;</div><div class="line">    &lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;!--这里插入剪切板的代码--&gt;</div></pre></td></tr></table></figure>
<h3 id="文章短链接"><a href="#文章短链接" class="headerlink" title="文章短链接"></a>文章短链接</h3><p>中文路径对于搜索引擎优化非常的不友好，为了解决这个问题，给大家一款插件<code>abbrlink</code>，能够自动生成文章的短链接。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-abbrlink --save</div></pre></td></tr></table></figure>
<p>打开站点配置文件，修改<code>permalink</code>属性。<br>其中<code>:abbrlink</code>代表连接地址。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">permalink: posts/:abbrlink/</div></pre></td></tr></table></figure>
<h3 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h3><p>进入到博客的根目录，运行命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page messages</div></pre></td></tr></table></figure>
<p>执行成功后，在<code>source</code>目录下会多出一个<code>index.md</code>，打开该文件，添加以下内容到底部。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;ds-recent-visitors&quot; data-num-items=&quot;28&quot; data-avatar-size=&quot;42&quot; id=&quot;ds-recent-visitors&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>
<p>然后要登录自己多说的站点，进入设置-&gt;自定义CSS，添加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">#ds-reset .ds-avatar img,</div><div class="line">#ds-recent-visitors .ds-avatar img &#123;</div><div class="line">    width: 54px;</div><div class="line">    height: 54px;     /*設置圖像的長和寬，這裏要根據自己的評論框情況更改*/</div><div class="line">    border-radius: 27px;     /*設置圖像圓角效果,在這裏我直接設置了超過width/2的像素，即為圓形了*/</div><div class="line">    -webkit-border-radius: 27px;     /*圓角效果：兼容webkit瀏覽器*/</div><div class="line">    -moz-border-radius: 27px;</div><div class="line">    box-shadow: inset 0 -1px 0 #3333sf;     /*設置圖像陰影效果*/</div><div class="line">    -webkit-box-shadow: inset 0 -1px 0 #3333sf;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#ds-recent-visitors .ds-avatar &#123;</div><div class="line">    float: left</div><div class="line">&#125;</div><div class="line">/*隱藏多說底部版權*/</div><div class="line">#ds-thread #ds-reset .ds-powered-by &#123;</div><div class="line">    display: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>找到<code>NexT</code>主题设置的<code>_config.yml</code>文件里面的<code>menu</code>项和<code>menu_icons</code>，添加留言条目和对应的<code>icon</code>。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)</span></div><div class="line"><span class="symbol">menu:</span></div><div class="line">  <span class="symbol">home:</span> /</div><div class="line">  <span class="comment">#about: /about</span></div><div class="line">  <span class="symbol">archives:</span> /archives</div><div class="line">  <span class="symbol">tags:</span> /tags</div><div class="line">  <span class="symbol">categories:</span> /categories</div><div class="line">  <span class="symbol">messages:</span> /messages</div><div class="line">  </div><div class="line">  </div><div class="line"><span class="comment"># Enable/Disable menu icons.</span></div><div class="line"><span class="comment"># Icon Mapping:</span></div><div class="line"><span class="comment">#   Map a menu item to a specific FontAwesome icon name.</span></div><div class="line"><span class="comment">#   Key is the name of menu item and value is the name of FontAwsome icon. Key is case-senstive.</span></div><div class="line"><span class="comment">#   When an question mask icon presenting up means that the item has no mapping icon.</span></div><div class="line"> <span class="symbol">menu_icons:</span></div><div class="line">  <span class="symbol">enable:</span> <span class="literal">true</span></div><div class="line">  <span class="comment">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></div><div class="line">  <span class="symbol">home:</span> home</div><div class="line">  <span class="symbol">about:</span> user</div><div class="line">  <span class="symbol">categories:</span> th</div><div class="line">  <span class="symbol">schedule:</span> calendar</div><div class="line">  <span class="symbol">tags:</span> tags</div><div class="line">  <span class="symbol">archives:</span> archive</div><div class="line">  <span class="symbol">messages:</span> comments</div></pre></td></tr></table></figure>
<p>找到<code>languages</code>文件夹里面的<code>zh-Hans.yml</code>文件，<code>menu</code>子项中添加留言：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">menu:</div><div class="line">  home: 首页</div><div class="line">  archives: 归档</div><div class="line">  categories: 分类</div><div class="line">  tags: 标签</div><div class="line">  about: 关于</div><div class="line">  search: 搜索</div><div class="line">  commonweal: 公益404</div><div class="line">  messages: 留言</div></pre></td></tr></table></figure>
<h3 id="版权信息"><a href="#版权信息" class="headerlink" title="版权信息"></a>版权信息</h3><p><code>站点配置文件</code>添加以下内容</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Creative Commons 4.0 International License.</span></div><div class="line"><span class="comment"># http://creativecommons.org/</span></div><div class="line"><span class="comment"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></div><div class="line"><span class="symbol">creative_commons:</span> by-nc-sa</div></pre></td></tr></table></figure>
<p><code>\themes\next\layout\post.swig</code>，合适位置添加以下代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;div class=&quot;page-footer&quot;&gt;</div><div class="line">    &#123;% if not is_index %&#125;</div><div class="line">      &lt;div id=&quot;eof&quot; class=&quot;print-invisible&quot;&gt;</div><div class="line">        &lt;hr class=&quot;eof&quot;&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line"></div><div class="line">      &lt;div class=&quot;copyright&quot; style=&quot;clear:both;&quot;&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;本文标题:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot;&gt;&#123;&#123; page.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;文章作者:&lt;/span&gt;&lt;a href=&quot;/&quot; title=&quot;访问 &#123;&#123; theme.author &#125;&#125; 的个人博客&quot;&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;发布时间:&lt;/span&gt;&#123;&#123; page.date.format(&quot;YYYY年M月D日 - HH时MM分&quot;) &#125;&#125;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;最后更新:&lt;/span&gt;&#123;&#123; page.updated.format(&quot;YYYY年M月D日 - HH时MM分&quot;) &#125;&#125;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;本文字数:&lt;/span&gt;&lt;span class=&quot;page-count&quot;&gt;本文一共有&#123;&#123; wordcount(page.content) &#125;&#125;字&lt;/span&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;原始链接:&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(page.path) &#125;&#125;&quot; title=&quot;&#123;&#123; page.title &#125;&#125;&quot;&gt;&#123;&#123; page.permalink &#125;&#125;&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;许可协议:&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;http://creativecommons.org/licenses/by-nc/4.0/&quot; title=&quot;Attribution-NonCommercial 4.0 International (CC BY-NC 4.0)&quot;&gt;Attribution-NonCommercial 4.0&lt;/a&gt;&lt;/p&gt;</div><div class="line">         &lt;p&gt;&lt;span&gt;转载请保留以上信息。&lt;/span&gt;&lt;/p&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">    &#123;% if not is_index and (post.prev or post.next) %&#125;</div><div class="line">      &lt;div class=&quot;post-nav&quot;&gt;</div><div class="line">        &lt;div class=&quot;post-nav-prev post-nav-item&quot;&gt;</div><div class="line">          &#123;% if post.prev %&#125;</div><div class="line">            &lt;a href=&quot;&#123;&#123; url_for(post.prev.path) &#125;&#125;&quot;&gt;&#123;&#123;post.prev.title&#125;&#125;&lt;/a&gt;</div><div class="line">          &#123;% endif %&#125;</div><div class="line">        &lt;/div&gt;</div><div class="line"></div><div class="line">        &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt;</div><div class="line">          &#123;% if post.next %&#125;</div><div class="line">            &lt;a href=&quot;&#123;&#123; url_for(post.next.path) &#125;&#125;&quot;&gt;&#123;&#123;post.next.title&#125;&#125;&lt;/a&gt;</div><div class="line">          &#123;% endif %&#125;</div><div class="line">        &lt;/div&gt;</div><div class="line">      &lt;/div&gt;</div><div class="line">    &#123;% endif %&#125;</div><div class="line"></div><div class="line">  &lt;/div&gt;</div></pre></td></tr></table></figure>
<p>找到<code>_post.styl</code>，添加样式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.page-footer .copyright&#123;</div><div class="line">  padding-top: 1.5em;</div><div class="line">  padding-left: 1em;</div><div class="line">  font-size: 12px;</div><div class="line">  line-height: 1em;</div><div class="line">  border:1px solid #ccc;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="集成第三方服务"><a href="#集成第三方服务" class="headerlink" title="集成第三方服务"></a>集成第三方服务</h2><h3 id="多说评论"><a href="#多说评论" class="headerlink" title="多说评论"></a>多说评论</h3><p>使用多说前需要先在 多说 创建一个站点。具体步骤如下：</p>
<p>登录后在首页选择 “我要安装”。</p>
<p>创建站点，填写站点相关信息。 <strong>多说域名</strong> 这一栏填写的即是你的 <code>duoshuo_shortname</code>，如图：</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/duoshuo-create-site.png" alt=""></p>
<p>创建站点完成后在 <code>站点配置</code>文件 中新增 <code>duoshuo_shortname</code> 字段，值设置成上一步中的值。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">duoshuo_shortname: aiyouweiya</div></pre></td></tr></table></figure>
<h3 id="多说评论显示-UA"><a href="#多说评论显示-UA" class="headerlink" title="多说评论显示 UA"></a>多说评论显示 UA</h3><p>在每一条多说评论后显示评论者所使用的代理信息（如 操作系统、浏览器），效果如下：</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/duoshuo-ua.png" width="100%"></p>
<p>要启用此功能，需要配置 <code>duoshuo_info</code> 这个字段。 编辑 <code>主题配置</code>文件，查找 <code>duoshuo_info</code> 字段， 设置如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Make duoshuo show UA</div><div class="line"># user_id must NOT be null when admin_enable is true!</div><div class="line"># you can visit http://dev.duoshuo.com get duoshuo user id.</div><div class="line">duoshuo_info:</div><div class="line">  ua_enable: true</div><div class="line">  admin_enable: false</div><div class="line">  user_id:</div><div class="line">  admin_nickname:</div></pre></td></tr></table></figure>
<p>只要设置 <code>ua_enable</code> 为 <code>true</code> 即可显示 UA 信息。 <code>admin_enable</code> 是用于显示 「博主」 文字，表明评论者是博主，此字段需要同时配置 <code>user_id</code> 和 <code>admin_nickname</code> 字段。 请访问 <a href="http://dev.duoshuo.com/" target="_blank" rel="external">多说</a>，登录并访问「我的主页」获取 <code>user_id</code> ， 此 ID 是 网址最后那串数字。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">duoshuo_info:</div><div class="line">  ua_enable: true</div><div class="line">  admin_enable: true</div><div class="line">  user_id: 1234567</div><div class="line">  admin_nickname: 主编大人</div></pre></td></tr></table></figure>
<h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h3><p><strong>注意</strong>： <code>baidu_analytics</code> 不是你的<code>百度 id</code> 或者<code>百度统计 id</code></p>
<p>登录 <a href="http://tongji.baidu.com/" target="_blank" rel="external">百度统计</a>， 定位到站点的代码获取页面</p>
<p>复制 <code>hm.js?</code> 后面那串统计脚本 id，如：</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/analytics-baidu-id.png" width="100%"></p>
<p>编辑<code>站点配置</code>文件， 新增字段 <code>baidu_analytics</code> 字段，值设置成你的百度统计脚本 id</p>
<h3 id="阅读次数统计（LeanCloud"><a href="#阅读次数统计（LeanCloud" class="headerlink" title="阅读次数统计（LeanCloud)"></a>阅读次数统计（LeanCloud)</h3><p>在<a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="external">LeanCloud</a>注册帐号并验证邮箱之后，我们就可以登录我们的<code>LeanCloud</code>帐号，进行一番配置之后拿到<code>AppID</code>以及<code>AppKey</code>这两个参数即可正常使用文章阅读量统计的功能了。</p>
<p>注册完成后登陆来到这里创建应用，图中的是我已经创建好的一个。</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/leancloud1.png" alt=""></p>
<p>以<code>test</code>为例创建一个应用，选择开发版即可</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/leancloud2.png" alt=""></p>
<p>创建完成后点击存储，进入程序目录界面。</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/leancloud3.png" width="100%" height="300px"></p>
<p>在弹出的选项中选择<code>创建Class</code>来新建<code>Class</code>用来专门保存我们博客的文章访问量等数据</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/leancloud4.png" width="100%" height="400px"></p>
<p>这里取名<code>Counter</code>，由于<code>LeanCloud</code>升级了默认的<code>ACL</code>权限，如果你想避免后续因为权限的问题导致次数统计显示不正常，建议在此处选择<code>无限制</code></p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/leancloud5.png" width="100%" height="800px"></p>
<p>回到控制台，点击设置，查看应用<code>Key</code>。<img src="http://olb41wiaa.bkt.clouddn.com/leancloud6.jpg" width="100%" height="400px"></p>
<p>复制<code>AppID</code>以及<code>AppKey</code>并在<code>NexT</code>主题的<code>_config.yml</code>文件中我们相应的位置填入即可，正确配置之后文件内容像这个样子:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">leancloud_visitors:</div><div class="line">  enable: true</div><div class="line">  app_id: App ID</div><div class="line">  app_key: App Key</div></pre></td></tr></table></figure>
<p>这个时候重新生成部署<code>Hexo</code>博客，应该就可以正常使用文章阅读量统计的功能了。需要特别说明的是：记录文章访问量的唯一标识符是文章的<code>发布日期</code>以及<code>文章的标题</code>，因此请确保这两个数值组合的唯一性，如果你更改了这两个数值，会造成文章阅读数值的清零重计。</p>
<h3 id="Local-Search"><a href="#Local-Search" class="headerlink" title="Local Search"></a>Local Search</h3><p>添加本地站点内容搜索</p>
<ol>
<li><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure>
</li>
<li><p>编辑 <code>站点配置</code>文件，新增以下内容到任意位置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line">  path: search.xml</div><div class="line">  field: post</div><div class="line">  format: html</div><div class="line">  limit: 10000</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="MathJax"><a href="#MathJax" class="headerlink" title="MathJax"></a>MathJax</h3><p><code>NexT</code>借助于 <code>MathJax</code>来显示数学公式，此选项默认关闭。</p>
<p>编辑 <code>主题配置</code>文件，将 <code>mathjax</code> 设定为 <code>true</code> 即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># MathJax Support</div><div class="line">mathjax: true</div></pre></td></tr></table></figure>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p><strong>夏末</strong> :<a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="external">为NexT主题添加文章阅读量统计功能</a></p>
<p><strong>Next官网</strong>: <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">http://theme-next.iissnan.com/getting-started.html</a></p>
<p><strong>lancelot_lewis</strong>: <a href="http://www.jianshu.com/p/f2cfc95cab4e" target="_blank" rel="external">http://www.jianshu.com/p/f2cfc95cab4e</a></p>
<p><strong>Aixiu</strong>: <a href="http://blog.ynxiu.com/2016/hexo-next-theme-optimize.html" target="_blank" rel="external">http://blog.ynxiu.com/2016/hexo-next-theme-optimize.html</a></p>
<p>…… </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Next主题安装&quot;&gt;&lt;a href=&quot;#Next主题安装&quot; class=&quot;headerlink&quot; title=&quot;Next主题安装&quot;&gt;&lt;/a&gt;Next主题安装&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Next&lt;/code&gt;是我用的第一款主题，精于心简于形的灵感，响应式的设计，还可以高度自由定制，体验起来真的是超级无敌爽！！关于&lt;code&gt;Next&lt;/code&gt;的介绍大家可以参考官网 &lt;a href=&quot;http://theme-next.iissnan.com/&quot;&gt;http://theme-next.iissnan.com/&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;Hexo&lt;/code&gt;中有两份主要的配置文件，其名称都是 &lt;code&gt;_config.yml&lt;/code&gt;。 其中，一份位于站点根目录下，称为 &lt;code&gt;站点配置文件&lt;/code&gt;，主要包含 &lt;code&gt;Hexo&lt;/code&gt;本身的配置；另一份位于主题目录下，称为 &lt;code&gt;主题配置文件&lt;/code&gt;，这份配置由主题作者提供，主要用于配置主题相关的选项。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://aiyouweiya.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>解决Windows下文件路径太长无法删除的问题</title>
    <link href="https://aiyouweiya.github.io/posts/33255/"/>
    <id>https://aiyouweiya.github.io/posts/33255/</id>
    <published>2017-02-15T16:00:00.000Z</published>
    <updated>2017-02-17T11:55:14.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p><code>Node.js</code> <a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a></p>
<p><code>Node.js国内镜像</code> <a href="https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fnodejs" target="_blank" rel="external">https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fnodejs</a> </p>
<p>一路下一步安装，注意请勾选<strong>Add to PATH</strong>选项。</p>
<a id="more"></a>
<h2 id="安装windows-node-deps-deleter"><a href="#安装windows-node-deps-deleter" class="headerlink" title="安装windows-node-deps-deleter"></a>安装windows-node-deps-deleter</h2><p>打开命令提示符，输入以下命令来安装<code>windows-node-deps-deleter</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g windows-node-deps-deleter</div></pre></td></tr></table></figure>
<h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wnddel dir1 <span class="comment">#dir1为你要删除的文件路径，文件夹路径也可以</span></div></pre></td></tr></table></figure>
<p>关于<code>windows-node-deps-deleter</code>的介绍大家可以参考官网 <a href="https://www.npmjs.com/package/windows-node-deps-deleter" target="_blank" rel="external">https://www.npmjs.com/package/windows-node-deps-deleter</a> 。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装Node-js&quot;&gt;&lt;a href=&quot;#安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装Node.js&quot;&gt;&lt;/a&gt;安装Node.js&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Node.js&lt;/code&gt; &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Node.js国内镜像&lt;/code&gt; &lt;a href=&quot;https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fnodejs&quot;&gt;https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fnodejs&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;一路下一步安装，注意请勾选&lt;strong&gt;Add to PATH&lt;/strong&gt;选项。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Windows奇淫巧技" scheme="https://aiyouweiya.github.io/tags/Windows%E5%A5%87%E6%B7%AB%E5%B7%A7%E6%8A%80/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客搭建篇（一）</title>
    <link href="https://aiyouweiya.github.io/posts/3077/"/>
    <id>https://aiyouweiya.github.io/posts/3077/</id>
    <published>2017-02-14T16:00:00.000Z</published>
    <updated>2017-02-17T11:55:14.661Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是Hexo？"><a href="#什么是Hexo？" class="headerlink" title="什么是Hexo？"></a>什么是Hexo？</h2><p><code>Hexo</code> 是一个快速、简洁且高效的博客框架。<code>Hexo</code> 使用<code>Markdwon</code>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p style="text-align:right;">    —— <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">文档 | Hexo </a>  —— </p><p></p>
<a id="more"></a>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><ul>
<li><code>有梯子</code><a href="https://git-scm.com/download/win" target="_blank" rel="external">https://git-scm.com/download/win</a> </li>
<li><code>无梯子</code>  <a href="https://github.com/waylau/git-for-win" target="_blank" rel="external">https://github.com/waylau/git-for-win</a></li>
</ul>
<p>一路下一步安装，安装完成需要做一下简单的配置，在任意位置右键鼠标，你会发现条目中多出几个与<code>Git</code>相关的条目。其中<code>Git Bash Here</code>使用最为普遍，他提供一种类似<code>Linux Shell</code>的风格。</p>
<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p><code>Node.js</code> <a href="https://nodejs.org/en/" target="_blank" rel="external">https://nodejs.org/en/</a></p>
<p><code>Node.js国内镜像</code> <a href="https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fnodejs" target="_blank" rel="external">https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fnodejs</a> </p>
<p>也是一路下一步安装，注意请勾选<strong>Add to PATH</strong>选项。</p>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在任意位置右键，选择<code>Git Bash Here</code>，执行以下命令进行安装，安装过程可能会比较慢，请耐心等待。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli</div></pre></td></tr></table></figure>
<h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>安装<code>Hexo</code>完成后，选定一个目录作为你的博客根目录，然后在该目录下右键点击<code>Git Bash Here</code>，<code>Hexo</code>将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div><div class="line">$ npm install</div></pre></td></tr></table></figure>
<p>完成该操作后，你会发现指定目录的目录结构变成如下：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml  <span class="comment"># 网站的配置信息，您可以在此配置大部分的参数。</span></div><div class="line">├── package.json  <span class="comment"># 应用程序的信息, 记录了程序的名称、版本、依赖等。</span></div><div class="line">├── scaffolds  <span class="comment"># 模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</span></div><div class="line">├── source   <span class="comment"># 资源文件夹是存放用户资源的地方</span></div><div class="line"><span class="params">|   ├── _drafts</span></div><div class="line">|   └── _posts</div><div class="line">└── themes  <span class="comment"># 主题文件夹。Hexo 会根据主题来生成静态页面。</span></div></pre></td></tr></table></figure>
<h3 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h3><p>打开<code>source\post</code>文件夹，里边有一篇测试文章<code>hello-world.md</code>，然后我们回到<code>Git Bash</code>执行以下命令，完成后你会发现根目录下多出一个<code>public</code>的文件夹，里边就是根据<code>post</code>里面的文章生成的静态文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure>
<h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>执行如下命令，启动本地服务，进行文章预览调试。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server</div></pre></td></tr></table></figure>
<p>浏览器输入<code>http://127.0.0.1:4000</code>就可以看到一下效果。（亲测，不要使用微软家的浏览器）。预览完毕后<code>Ctrl+C</code>关闭服务器。</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/yulan.jpg" alt="landscape效果预览"></p>
<h2 id="你的第一篇博客"><a href="#你的第一篇博客" class="headerlink" title="你的第一篇博客"></a>你的第一篇博客</h2><p>既然框架已经搭建好了，那我们现在就来开始创作自己的第一篇博客吧！！！</p>
<h3 id="选择编辑工具"><a href="#选择编辑工具" class="headerlink" title="选择编辑工具"></a>选择编辑工具</h3><p>那么首先我们应该选择一款心仪的编辑工具来编写博客了，下面是比较知名的几款编辑工具：</p>
<ul>
<li><p>在线编辑</p>
<p><code>MaHua</code><a href="http://mahua.jser.me/" target="_blank" rel="external">http://mahua.jser.me/</a></p>
<p><code>简书</code> <a href="http://www.jianshu.com/" target="_blank" rel="external">http://www.jianshu.com/</a> </p>
<p><code>Cmd Markdown 在线版</code> <a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">https://www.zybuluo.com/mdeditor</a>  </p>
</li>
<li><p>本地编辑</p>
<p><code>Typora</code> <a href="https://typora.io/" target="_blank" rel="external">https://typora.io/</a> </p>
<p><code>Cmd Markdown 客户端</code> <a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">https://www.zybuluo.com/cmd/</a> </p>
<p><code>马克飞象</code> <a href="https://pan.baidu.com/s/1sl7tx29#list/path=%2F" target="_blank" rel="external">https://pan.baidu.com/s/1sl7tx29#list/path=%2F</a></p>
</li>
</ul>
<p>这几款编辑器都各有各的优缺点吧，有实用的，有耐看的，有<code>Geek</code>的，孰优孰略大家可以都尝试看看，我自己使用的是<code>Typora</code>。</p>
<h3 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h3><p>用编辑器打开<code>source\post\hello-world.md</code>，有可能你看不懂，这是用<code>Markdown</code>语法写的文章，不过现在不用懂语法，我们就模仿这个文件自己写一个出来试试看。</p>
<p>编辑你的博客内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: Hello,Hexo</div><div class="line">---</div><div class="line">Hello,Hexo !!!</div></pre></td></tr></table></figure>
<p>然后保存，记住要保存到<code>post</code>目录下，接下来就要开始生成静态页面了，回到刚刚的根目录，右键<code>Git Bash Here</code> 。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hexo clean <span class="comment">#清除缓存文件 (db.json) 和已生成的静态文件 (public)。</span></div><div class="line">hexo generate <span class="comment">#生成静态文件</span></div><div class="line">hexo server <span class="comment">#开启服务器</span></div></pre></td></tr></table></figure>
<p>浏览器输入<code>http://127.0.0.1:4000</code>就可以看到一下效果。（亲测，不要使用微软家的浏览器）。预览完毕后<code>Ctrl+C</code>关闭服务器。</p>
<h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><p>以上过程就是本地编辑、预览的全部过程了，接下来我们要将文章托管到<code>Github</code>上，以供其他人可以访问。</p>
<h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><p>在 <a href="https://github.com/" target="_blank" rel="external">https://github.com/</a> 注册你的账号，<code>用户名</code>和<code>邮箱</code>比较重要，想好了再填，其他的也没什么好说的，比较简单。</p>
<h3 id="创建代码仓库"><a href="#创建代码仓库" class="headerlink" title="创建代码仓库"></a>创建代码仓库</h3><p>第一次创建仓库时会要求你验证邮箱，去邮箱里面验证一下就好了。下面我们创建一个代码仓库作为博客的容器，仓库的名字必须是<code>yourusername.github.io</code>，创建完成后在浏览器敲入<code>yourusername.github.io</code>就可以看到效果，不过比较简陋，因为现在仓库还是空的。</p>
<h3 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"Your Name"</span> <span class="comment"># 刚刚注册的用户名</span></div><div class="line">$ git config --global user.email <span class="string">"email@example.com"</span> <span class="comment"># 刚刚注册的邮箱</span></div></pre></td></tr></table></figure>
<h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"email@example.com"</span> <span class="comment"># 生成密钥</span></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> which to save the key (<span class="regexp">/c/</span>Documents <span class="keyword">and</span> Settings/Administrator/.ssh/id_rsa): <span class="comment"># 在此目录下保存密钥</span></div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): <span class="comment"># 读取密钥的密码（非常重要，设置时要小心）</span></div><div class="line">Enter same passphrase <span class="symbol">again:</span></div><div class="line">Your identification has been saved <span class="keyword">in</span> /c/Documents <span class="keyword">and</span> Settings/Administrator/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /c/Documents <span class="keyword">and</span> Settings/Administrator/.ssh/id_rsa.pub.</div></pre></td></tr></table></figure>
<p>上述命令若执行成功，会在<code>c/Documents and Settings/Administrator/.ssh/</code>目录下生成两个文件<code>id_rsa</code>和<code>id_rsa.pub</code>，带<code>pub</code>的是公钥，另外一个是私钥。</p>
<h3 id="添加私钥到ssh-agent"><a href="#添加私钥到ssh-agent" class="headerlink" title="添加私钥到ssh-agent"></a>添加私钥到ssh-agent</h3><p>确保<code>ssh-agent</code>是可用的。<code>ssh-agent</code>是一种控制用来保存公钥身份验证所使用的私钥的程序，其实<code>ssh-agent</code>就是一个密钥管理器，运行<code>ssh-agent</code>以后，使用<code>ssh-add</code>将私钥交给<code>ssh-agent</code>保管，其他程序需要身份验证的时候可以将验证申请交给<code>ssh-agent</code>来完成整个认证过程。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ eval &quot;$(ssh-agent -s)&quot;</div><div class="line">Agent pid 59566</div><div class="line">$ ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure>
<h3 id="上传公钥"><a href="#上传公钥" class="headerlink" title="上传公钥"></a>上传公钥</h3><p>打开公钥，将里面的内容复制到剪切板，然后来到<code>Github</code>网站，点击你的头像，点击<code>Settings</code> ，点击 <code>SSH and GPG keys</code>，点击<code>New SSH Key</code>，粘贴剪切板内容。</p>
<h3 id="安装hexo-deployer-git插件"><a href="#安装hexo-deployer-git插件" class="headerlink" title="安装hexo-deployer-git插件"></a>安装hexo-deployer-git插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>
<h3 id="修改部署配置"><a href="#修改部署配置" class="headerlink" title="修改部署配置"></a>修改部署配置</h3><p>打开<code>_config.yml</code>，滑到最下面，修改以下内容。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type:</div></pre></td></tr></table></figure>
<p>修改为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: https://github.com/yourname/yourname.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<h3 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h3><p>回到根目录下，执行以下命令开始部署。此过程需要输入你的用户名和密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<p>部署完毕，大概几十秒后在浏览器键入<code>yourusername.github.io</code>即可看到效果。以上就是写博客的大体步骤了。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本片博客主要介绍了<code>Hexo</code>搭建博客的过程，包括<code>环境准备</code>，<code>搭建框架</code>，<code>创作博客</code>，<code>本地预览</code>，<code>部署到Github</code>，这样的几个步骤。</p>
<p>最后的最后这几个命令要牢记，因为这几个命令就是大体的流程了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo clean</div><div class="line">hexo generate</div><div class="line">hexo server</div><div class="line">hexo deploy</div></pre></td></tr></table></figure>
<h2 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h2><p><code>量子广告:</code> <a href="http://blog.ynxiu.com/2016/hexo-you-blog.html" target="_blank" rel="external">http://blog.ynxiu.com/2016/hexo-you-blog.html</a></p>
<p><code>西山雨:</code> <a href="https://segmentfault.com/a/1190000002645623" target="_blank" rel="external">https://segmentfault.com/a/1190000002645623</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是Hexo？&quot;&gt;&lt;a href=&quot;#什么是Hexo？&quot; class=&quot;headerlink&quot; title=&quot;什么是Hexo？&quot;&gt;&lt;/a&gt;什么是Hexo？&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Hexo&lt;/code&gt; 是一个快速、简洁且高效的博客框架。&lt;code&gt;Hexo&lt;/code&gt; 使用&lt;code&gt;Markdwon&lt;/code&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;p style=&quot;text-align:right;&quot;&gt;    —— &lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot;&gt;文档 | Hexo &lt;/a&gt;  —— &lt;/p&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="https://aiyouweiya.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>用WinSCP远程连接Linux主机的小技巧</title>
    <link href="https://aiyouweiya.github.io/posts/52976/"/>
    <id>https://aiyouweiya.github.io/posts/52976/</id>
    <published>2017-02-12T16:00:00.000Z</published>
    <updated>2017-02-17T11:55:14.714Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是WinSCP"><a href="#什么是WinSCP" class="headerlink" title="什么是WinSCP"></a>什么是WinSCP</h2><p><code>WinSCP</code>是一个<code>Windows</code>环境下使用<code>ssh</code>的开源图形化<code>SFTP</code>客户端。同时支持<code>SCP</code>协议。它的主要功能就是在本地与远程计算机间安全的复制文件，提供图形化界面，操作起来十分简单方便。<a href="https://winscp.net/eng/index.php" target="_blank" rel="external">传送门</a></p>
<a id="more"></a>
<h2 id="使用密钥登陆远程主机"><a href="#使用密钥登陆远程主机" class="headerlink" title="使用密钥登陆远程主机"></a>使用密钥登陆远程主机</h2><p><code>WinSCP</code>默认使用密码登陆，这种方式当然，是不安全的，所以我们要设置成密钥登陆</p>
<p>点击<code>登陆</code>对话框的<code>高级</code>按钮，弹出<code>高级站点设置</code>对话框，<code>SSH--验证--密钥文件</code>，选中之前生成的密钥文件<code>id_rsa</code>即可，程序会自动转换为<code>ppk</code>格式。</p>
<p><img src="http://olb41wiaa.bkt.clouddn.com/miyao.png" width="100%"></p>
<p>做好上述配置后，退出链接，再次连接时会提示你输入密钥的密码。</p>
<h2 id="与远程主机保持连接"><a href="#与远程主机保持连接" class="headerlink" title="与远程主机保持连接"></a>与远程主机保持连接</h2><p>尽管这个软件使用起来特别方便，但是隔了几分钟没在上面操作，连接就会断开，我们可以通过小小的设置就可以解决这个问题，在登陆状态下菜单栏的<code>选项--选项--面板--远程</code>，勾选上<code>刷新远程面板间隔</code>即可。</p>
<h2 id="直接用root账户登陆"><a href="#直接用root账户登陆" class="headerlink" title="直接用root账户登陆"></a>直接用root账户登陆</h2><p>修改<code>/etc/ssh/sshd_config</code>，改为如下</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#PermitRootLogin prohibit-password</span></div><div class="line">PermitRootLogin yes</div></pre></td></tr></table></figure>
<p>修改<code>/etc/sudoers</code>，改为如下</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#ubuntu  ALL=(ALL:ALL) NOPASSWD: ALL</span></div><div class="line">ubuntu ALL=<span class="symbol">NOPASSWD:</span> ALL</div><div class="line">%sudo ALL=(ALL) <span class="symbol">NOPASSWD:</span>ALL</div></pre></td></tr></table></figure>
<p>修改<code>WinSCP</code>设置，<code>高级--环境--SFTP</code>，修改<code>SFTP服务器</code>为<code>sudo  /usr/lib/openssh/sftp-server</code>，<code>保存</code>，之后登陆就不再需要切换到<code>su</code>下了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是WinSCP&quot;&gt;&lt;a href=&quot;#什么是WinSCP&quot; class=&quot;headerlink&quot; title=&quot;什么是WinSCP&quot;&gt;&lt;/a&gt;什么是WinSCP&lt;/h2&gt;&lt;p&gt;&lt;code&gt;WinSCP&lt;/code&gt;是一个&lt;code&gt;Windows&lt;/code&gt;环境下使用&lt;code&gt;ssh&lt;/code&gt;的开源图形化&lt;code&gt;SFTP&lt;/code&gt;客户端。同时支持&lt;code&gt;SCP&lt;/code&gt;协议。它的主要功能就是在本地与远程计算机间安全的复制文件，提供图形化界面，操作起来十分简单方便。&lt;a href=&quot;https://winscp.net/eng/index.php&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="腾讯云" scheme="https://aiyouweiya.github.io/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>SSH远程登录Linux主机方法及原理</title>
    <link href="https://aiyouweiya.github.io/posts/39582/"/>
    <id>https://aiyouweiya.github.io/posts/39582/</id>
    <published>2017-01-02T16:00:00.000Z</published>
    <updated>2017-02-17T11:55:14.691Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是SSH"><a href="#什么是SSH" class="headerlink" title="什么是SSH"></a>什么是SSH</h2><p>Secure Shell（缩写为SSH），由IETF的网络工作小组（Network Working Group）所制定；SSH是一项建立在应用层和传输层基础上的安全协议，为计算机上的Shell（壳层）提供安全的传输和使用环境。SSH是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用SSH协议可以有效防止远程管理过程中的信息泄露问题。透过SSH可以对所有传输的数据进行加密，也能够防止DNS欺骗和IP欺骗,总之它能够为我们安全使用远程主机提供保障。</p>
<a id="more"></a>
<h2 id="怎样使用SSH登陆"><a href="#怎样使用SSH登陆" class="headerlink" title="怎样使用SSH登陆"></a>怎样使用SSH登陆</h2><p>在客户端来看，SSH提供两种级别的安全验证。</p>
<ul>
<li>第一种级别（基于密码的安全验证），知道帐号和密码，就可以登录到远程主机，本地主机用服务器的公钥对密码加密，然后将加密后的数据发送到服务器，服务器使用私钥解密，密码验证成功则允许登陆，否则不允许登陆。</li>
<li>第二种级别（基于密钥的安全验证），需要依靠密钥，也就是你必须为自己创建一对密钥，并把公有密钥放在需要访问的服务器上。客户端软件会向服务器发出请求，请求用你的密钥进行安全验证。服务器收到请求之后，先在你在该服务器的用户根目录下寻找你的公有密钥，然后把它和你发送过来的公有密钥进行比较。如果两个密钥一致，服务器就用公有密钥加密「质询」（challenge）并把它发送给客户端软件，客户端用私钥进行解密，然后将解密后的数据发送回服务器进行验证。</li>
</ul>
<h3 id="密码登录"><a href="#密码登录" class="headerlink" title="密码登录"></a>密码登录</h3><p>假设你是第一次登录远程主机，使用<code>$ ssh ubuntu@xxx.com</code>登录，你会得到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The authenticity of host &apos;123.206.198.83 (123.206.198.83)&apos; can&apos;t be established.</div><div class="line">ECDSA key fingerprint is SHA256:P0XOcgjXyTikxaGKzmWsALKUYZPqTftP0KTFoTJnFvs.</div><div class="line">Are you sure you want to continue connecting (yes/no)?</div></pre></td></tr></table></figure>
<p>意思是：我是你要登陆的远程主机，我的公钥的<code>SHA256</code>指纹是<code>P0XOcgjXyTikxaGKzmWsALKUYZPqTftP0KTFoTJnFvs</code>,你是否要继续连接，此时该主机的公钥指纹是不可信任的（中间人攻击），我们可以将其与远程主机的公钥进行对比（一般是公开的）例如<code>Github公钥</code><a href="https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/" target="_blank" rel="external">https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/</a> 如果一致的话就可以确认链接，不是的话就说明存在中间人攻击了。</p>
<p>当确认连接后，会提示输入密码<code>ubuntu@xxx.com&#39;s password:</code>，此时输入正确的密码即可成功登陆，显示如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-53-generic x86_64)</div><div class="line"></div><div class="line"> * Documentation:  https://help.ubuntu.com</div><div class="line"> * Management:     https://landscape.canonical.com</div><div class="line"> * Support:        https://ubuntu.com/advantage</div><div class="line"></div><div class="line">Last login: Mon Feb 13 14:32:03 2017</div><div class="line">ubuntu@VM-37-129-ubuntu:~$</div></pre></td></tr></table></figure>
<h4 id="中间人攻击"><a href="#中间人攻击" class="headerlink" title="中间人攻击"></a>中间人攻击</h4><p>攻击者与通讯的两端分别建立独立的联系，并交换其所收到的数据，使通讯的两端认为他们正在通过一个私密的连接与对方直接对话，但事实上整个会话都被攻击者完全控制。下面这个例子解释了密码登陆的危险性。</p>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Man_in_the_middle_attack.svg/640px-Man_in_the_middle_attack.svg.png" alt="中间人攻击" width="100%"></p>
<p>假设爱丽丝（Alice）希望与鲍伯（Bob）通信。同时，马洛里（Mallory）希望拦截窃会话以进行窃听并可能在某些时候传送给鲍伯一个虚假的消息。</p>
<p>首先，爱丽丝会向鲍勃索取他的公钥。如果Bob将他的公钥发送给Alice，并且此时马洛里能够拦截到这个公钥，就可以实施中间人攻击。马洛里发送给爱丽丝一个伪造的消息，声称自己是鲍伯，并且附上了马洛里自己的公钥（而不是鲍伯的）。<br>爱丽丝收到公钥后相信这个公钥是鲍伯的，于是爱丽丝将她的消息用马洛里的公钥（爱丽丝以为是鲍伯的）加密，并将加密后的消息回给鲍伯。马洛里再次截获爱丽丝回给鲍伯的消息，并使用马洛里自己的私钥对消息进行解密，如果马洛里愿意，她也可以对消息进行修改，然后马洛里使用鲍伯原先发给爱丽丝的公钥对消息再次加密。当鲍伯收到新加密后的消息时，他会相信这是从爱丽丝那里发来的消息。<br>1.爱丽丝发送给鲍伯一条消息，卻被马洛里截获：</p>
<p>2.马洛里将这条截获的消息转送给鲍伯；此时鲍伯並無法分辨这条消息是否从真的爱丽丝那里发来的：</p>
<p>3.鲍伯回应爱丽丝的消息，并附上了他的公钥：</p>
<p>4.马洛里用自己的密钥替换了消息中鲍伯的密钥，并将消息转发给爱丽丝，声称这是鲍伯的公钥：</p>
<p>5.爱丽丝用她以为是鲍伯的公钥加密了她的消息，以为只有鲍伯才能读到它：</p>
<p>6.然而，由于这个消息实际上是用马洛里的密钥加密的，所以马洛里可以解密它，阅读它，并在愿意的时候修改它。他使用鲍伯的密钥重新加密，并将重新加密后的消息转发给鲍伯：</p>
<p>7.鲍勃认为，这条消息是经由安全的传输通道从爱丽丝那里传来的。<br>这个例子显示了爱丽丝和鲍伯需要某种方法来确定他们是真正拿到了属于对方的公钥，而不是拿到来自攻击者的公钥。</p>
<h3 id="密钥登陆"><a href="#密钥登陆" class="headerlink" title="密钥登陆"></a>密钥登陆</h3><h4 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h4><p>首先设置你的用户名密码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;Your Name&quot;</div><div class="line">$ git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure>
<p>然后生成密钥：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen</div><div class="line">Geberating public/private rsa key pair.</div><div class="line">Enter file in which to save the key (/c/Documents and Settings/Administrator/.ssh/id_rsa):（设置保存公钥和私钥的位置，保持默认，可以不填直接回车）</div><div class="line">Enter passphrase (empty for no passphrase): （读取id_rsa的密码，可不填，不过建议填写）</div><div class="line">Enter same passphrase again: （再次输入id_rsa密码确认）</div><div class="line">Your identification has been saved in /c/Documents and Settings/Administrator/.ssh/id_rsa.</div><div class="line">Your public key has been saved in /c/Documents and Settings/Administrator/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:生成的KEY 你的email帐户</div></pre></td></tr></table></figure>
<p>完成以上就在<code>c/Documents and Settings/Administrator/.ssh/</code>生成了密钥对。</p>
<h4 id="上传公钥"><a href="#上传公钥" class="headerlink" title="上传公钥"></a>上传公钥</h4><p>接下来我们就要将公钥发送给服务器，这个过程需要你输入密码（在未登录的状态下执行以下命令）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">scp ~/.ssh/id_rsa.pub ubuntu@xxx.com:~</div></pre></td></tr></table></figure></p>
<p>输入密码后，公钥就被发送到服务器，但是还没完，我们还要将公钥添加到<code>authorized_keys</code>中，才能让服务器识别出本地的主机.（要在<code>root</code>权限下执行，不会自行百度）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd /home/ubuntu</div><div class="line">cat id_rsa.pub &gt;&gt; .ssh/authorized_keys</div></pre></td></tr></table></figure></p>
<p>OK，该主机的公钥已经被服务器识别，当你再次<code>$ ssh ubuntu@xxx.com</code>时，你会得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Enter passphrase for key &apos;/c/Users/aiyouweiya/.ssh/id_rsa&apos;:（输入私钥的密码）</div></pre></td></tr></table></figure></p>
<p>完成以上操作，就可完成密钥登陆。</p>
<h2 id="禁用密码登录"><a href="#禁用密码登录" class="headerlink" title="禁用密码登录"></a>禁用密码登录</h2><p>中间人攻击让密码登录变得不安全，因此我们需要在服务器设置禁止密码登陆，进入<code>/etc/ssh</code>目录，编辑<code>sshd_config</code>文件，设置此选项<code>PasswordAuthentication no</code>,即不允许密码登录，之后还要重新启动<code>service restart sshd</code>。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>因为公钥加密比密码直接登录更安全，所以一般的服务器都会默认将<code>PasswordAuthentication</code>设置为<code>no</code>，即不允许密码登录。但是当你开启密码登录时，默认会先采用公钥登录，公钥登录不成功还是会采取密码登录。ps：本地密钥丢失也会直接采用密码登录。下面比较这两种登录方式的差异。</p>
<table>
<thead>
<tr>
<th></th>
<th style="text-align:center">密码登录</th>
<th style="text-align:center">公钥登录</th>
</tr>
</thead>
<tbody>
<tr>
<td>含义</td>
<td style="text-align:center">本地主机用远程主机的公钥对密码加密，远程主机私钥解密</td>
<td style="text-align:center">远程主机随机发送字符串到客户端，客户端用私钥加密，发送回远程主机，远程主机用公钥解密</td>
</tr>
<tr>
<td>安全性</td>
<td style="text-align:center">低，容易受到中间人攻击</td>
<td style="text-align:center">高，但是要确保本地秘钥的安全性</td>
</tr>
</tbody>
</table>
<p>本文都是在<code>Ubuntu Server 16.04.1 LTS 64位</code>下进行的操作，其他类型的<code>Linux</code>机子都大同小异，留待读者自行研究吧……</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;什么是SSH&quot;&gt;&lt;a href=&quot;#什么是SSH&quot; class=&quot;headerlink&quot; title=&quot;什么是SSH&quot;&gt;&lt;/a&gt;什么是SSH&lt;/h2&gt;&lt;p&gt;Secure Shell（缩写为SSH），由IETF的网络工作小组（Network Working Group）所制定；SSH是一项建立在应用层和传输层基础上的安全协议，为计算机上的Shell（壳层）提供安全的传输和使用环境。SSH是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议。利用SSH协议可以有效防止远程管理过程中的信息泄露问题。透过SSH可以对所有传输的数据进行加密，也能够防止DNS欺骗和IP欺骗,总之它能够为我们安全使用远程主机提供保障。&lt;/p&gt;
    
    </summary>
    
    
      <category term="腾讯云" scheme="https://aiyouweiya.github.io/tags/%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
    
  </entry>
  
</feed>
